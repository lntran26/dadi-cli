"""
Snakefile for running dadi-cli DFE inference pipeline.
"""

types = ['synonymous', 'nonsynonymous']
demo_model = 'two_epoch_1d'
demo_p0 = '5 5 0.5'
demo_lbounds = '10e-3 10e-3 10e-5' 
demo_ubounds = '10 10 1'
dfe_model = 'lognormal'
dfe_p0 = '5 5 0.5'
dfe_lbounds = '-1 -1 10e-5'
dfe_ubounds = '-1 -1 1'

rule all:
    input:
        "1KG.YRI.two_epoch_1d.lognormal.InferDFE.opts.0"

rule generate_dadi_fs:
    input:
        "../data/1KG.YRI.CEU.biallelic.{type}.snps.withanc.strict.vcf.gz"
    output:
        "1KG.YRI.{type}.snps.unfold.fs"
    threads: 1
    shell:
        "dadi-cli GenerateFs --vcf {input} --pop-info ../data/1KG.YRI.CEU.popfile.txt --pop-ids YRI --projections 216 --polarized --output {output}"

rule dadi_infer_dm:
    input: 
        "1KG.YRI.synonymous.snps.unfold.fs"
    output:
        "1KG.YRI.two_epoch_1d.InferDM.opts.0",
    threads: 8
    shell:
        "dadi-cli InferDM --fs {input} --model {demo_model} --misid --p0 {demo_p0} --ubounds {demo_ubounds} --lbounds {demo_lbounds} --output-prefix 1KG.YRI.two_epoch_1d --thread 100"

rule dadi_bestfit_dm:
    input: rules.dadi_infer_dm.output
    output:
        "1KG.YRI.two_epoch_1d.InferDM.bestfits"
    threads: 1
    shell: 
        "dadi-cli BestFit --dir ./1KG.YRI.two_epoch_1d.InferDM --output test --model {demo_model} --misid --ubounds {demo_ubounds} --lbounds {demo_lbounds}"

rule dadi_generate_cache:
    input: rules.dadi_bestfit_dm.output
    output:
        "1KG.YRI.two_epoch.sel.spectra.bpkl"
    threads: 8
    shell:
        "dadi-cli GenerateCache --model two_epoch --demo-popt {input} --sample-size 216 --output {output} --mp --misid"

rule dadi_infer_dfe:
    input:
        "1KG.YRI.nonsynonymous.snps.unfold.fs",
        "1KG.YRI.two_epoch.sel.spectra.bpkl",
        "1KG.YRI.two_epoch_1d.InferDM.bestfits"
    output:
        "1KG.YRI.two_epoch_1d.lognormal.InferDFE.opts.0"
    threads: 8
    shell:
        "dadi-cli InferDFE --fs {input[0]} --cache1d {input[1]} --demo-popt {input[2]} --output-prefix 1KG.YRI.two_epoch_1d.lognormal --pdf1d {dfe_model} --p0 {dfe_p0} --ubounds {dfe_ubounds} --lbounds {dfe_lbounds} --misid --ratio 2.31 --thread 100"

#rule dadi_bestfit_dfe:
#    input: rules.dadi_infer_dfe.output

